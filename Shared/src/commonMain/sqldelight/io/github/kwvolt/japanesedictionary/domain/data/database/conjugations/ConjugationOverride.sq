CREATE TABLE conjugation_override (
    id INTEGER NOT NULL PRIMARY KEY,
    is_kanji INTEGER,
    conjugation_template_id INTEGER NOT NULL,
    conjugation_id INTEGER NOT NULL,
    override_note TEXT,
    CONSTRAINT FK_conj_override__conjugation_template FOREIGN KEY (conjugation_template_id) REFERENCES conjugation_template(id),
    CONSTRAINT FK_conj_override__conjugation FOREIGN KEY (conjugation_id) REFERENCES conjugation(id),
    CONSTRAINT UQ_conj_override__conjugation_template_id_conjugation_id_is_kanji UNIQUE(conjugation_template_id, conjugation_id, is_kanji),
    CONSTRAINT CK_BOOL_conj_override__is_kanji CHECK (is_kanji IN (0, 1))
);

insert {
    INSERT INTO conjugation_override (is_kanji, conjugation_template_id, conjugation_id, override_note) VALUES (?,?, ?, ?);
    SELECT last_insert_rowid();
}

update:
UPDATE conjugation_override SET
     is_kanji = CASE
        WHEN :is_kanji_provided THEN :is_kanji
        ELSE is_kanji
    END,
    conjugation_template_id = COALESCE(:conjugation_template_id, conjugation_template_id),
    conjugation_id = COALESCE(:conjugation_id, conjugation_id),
    override_note = CASE
        WHEN :override_note_provided THEN :override_note
        ELSE override_note
    END
WHERE id = ?;

delete:
DELETE FROM conjugation_override WHERE id = ?;

selectId:
SELECT id FROM conjugation_override WHERE is_kanji = ? AND conjugation_template_id = ? AND conjugation_id = ?;

selectRowById:
SELECT is_kanji, conjugation_template_id, conjugation_id, override_note FROM conjugation_override WHERE id = ?;

selectRowByKeys:
SELECT id, override_note FROM conjugation_override WHERE is_kanji = ? AND conjugation_template_id = ? AND conjugation_id = ?;

selectAllByConjugationTemplateIdAndConjugationId:
SELECT id, is_kanji, override_note FROM conjugation_override WHERE conjugation_template_id = ? AND conjugation_id = ?;

